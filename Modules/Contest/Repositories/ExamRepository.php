<?php

namespace Modules\Contest\Repositories;

use Illuminate\Support\Facades\Redis;
use Modules\Contest\Entities\Exam;
use Prettus\Repository\Eloquent\BaseRepository;

class ExamRepository extends BaseRepository
{
    public function model(): string
    {
        return Exam::class;
    }

    public function search($paramFilter) {
        $query = $this->model()::query();
        return $query->where(function ($query) use ($paramFilter) {
            if (!empty($request->name)) {
                $query->where('name', 'like', '%' . $paramFilter->name . '%');
            }
            if (!empty($paramFilter->code)) {
                $query->where('code', $paramFilter->code);
            }
            if (!empty($paramFilter->type)) {
                $query->where('type', $paramFilter->type);
            }
        })->orderBy('id', 'DESC')->paginate(20);
    }

    public function create($attributes, int $id = null)
    {
        $model = parent::create($attributes, $id);
        Redis::rpush('k12:product:cms:system:data:cache:queue', json_encode([
            'action' => 'UPDATE_ALL',
            'eventName' => 'k12_contest',
            'data' => $model->id
        ]));
        return $model;
    }

    public function update(array $attributes, $id): mixed
    {
        $result = parent::update($attributes, $id); // TODO: Change the autogenerated stub
        Redis::rpush('k12:product:cms:system:data:cache:queue', json_encode([
            'action' => 'UPDATE_ALL',
            'eventName' => 'k12_contest',
            'data' => $result->id
        ]));
        return $result;
    }
}
